// C++程序在执行时，将内存大方向划分为**4个区域**
// 代码区：存放函数体的二进制代码，由操作系统进行管理的
// 全局区：存放全局变量和静态变量以及常量
// 栈区：由编译器自动分配释放, 存放函数的参数值,局部变量等
// 堆区：由程序员分配和释放,若程序员不释放,程序结束时由操作系统回收

// 内存四区意义：
// 不同区域存放的数据，赋予不同的生命周期, 给我们更大的灵活编程

// ### 1.1 程序运行前
//	在程序编译后，生成了exe可执行程序，**未执行该程序前**分为两个区域
//	**代码区：**
// 	存放 CPU 执行的机器指令
// 	代码区是共享的，共享的目的是对于频繁被执行的程序，只需要在内存中有一份代码即可
// 	代码区是只读的，使其只读的原因是防止程序意外地修改了它的指令
// **全局区：**
// 全局变量和静态变量(static)存放在此.
// 全局区还包含了常量区, 字符串常量和其他常量(const修饰的全局量)也存放在此.
// 该区域的数据在程序结束后由操作系统释放

// ### 1.2 程序运行后
// 	**栈区：**
// 由编译器自动分配释放, 存放函数的参数值,局部变量等
// 注意事项：不要返回局部变量的地址，栈区开辟的数据由编译器自动释放
// 	**堆区：**
// 由程序员分配释放,若程序员不释放,程序结束时由操作系统回收
// 在C++中主要利用new在堆区开辟内存